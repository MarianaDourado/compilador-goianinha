#Substitua o valor de CC com o nome do compilador que voce usa: gcc ou g++
CC = gcc
CFLAGS =   -g  -Wall -ansi
LFLAGS = -lm

# O goianinha executavel depende de lexico.o e main.o. Uma vez obtidos estes arquivos eles sao "linkados"
# gerando o executavel goianinha

goianinha:    sintatico.o lexico.o 
	$(CC) $(CFLAGS) $(LFLAGS) lexico.o sintatico.o -o  goianinha


main.o: main.c
	$(CC) $(CFLAGS) $(FLAGS) -c main.c -o main.o
                
# sintatico.o depende de goianinha.sintatico.c Se ele for alterado, sintatico.o deve ser obtido 
#novamente e o comando para fazer isto é 
# comando de compilacao dada na segunda linha a seguir
sintatico.o: goianinha.sintatico.c
	$(CC) $(CFLAGS) -c goianinha.sintatico.c -o sintatico.o
#
# goianinha.sintatico.c depende do arquivo fonte para o Bison goianinha.y. Se goianinha.y for 
# modificado, novo goianinha.sintatico.c deve ser gerado
# Repare que a opcao -d foi usada. Ela causa a criacao do arquivo de cabeçalho goianinha.h pelo 
# bison. Este arquivo é 
# utilizado em goianinha.l para que o lexico e o sintático concordem com os mesmos codigos de tokens.

goianinha.sintatico.c: goianinha.y
	bison -d -t -v --output=goianinha.sintatico.c goianinha.y 

lexico.o: goianinha.lexico.c
	$(CC) $(CFLAGS) -c goianinha.lexico.c -o lexico.o
	
# lexico.o é o programa objeto gerado a partir da compilacao do arquivo goianinha.lexio.c gerado 
#pelo Flex. Sempre que o 
# arquivo goianinha.l for editado, um novo goianinha.lexico.c deve ser gerado usando o Flex e 
#em seguida, o novo goianinha.lexico.c deve ser
# compilado para gerara o novo lexico.o. Entao goianinha.lexico.c depende de goianinha.l e 
#lexico.o depende de goianinha.lexico.c.

goianinha.lexico.c: goianinha.l
	flex  --yylineno --outfile=goianinha.lexico.c goianinha.l 


# Se na linha de comando voce digitar: make clean, os arquivo objetos (.o) e o executavel (goianinha)
# serao apagados. Isto é util quando for submeter a versao final do trabalho para o professor, antes de fazer
# make tgz
clean:
	rm -f   goianinha*.c  *.o    goianinha

cleanObj:
	rm -f   *.o  
# Quando seu trabalho estiver pronto. No diretorio onde estão fontes digite na 
#linha de comando: make tgz
# este comando ira criar um arquivo do tipo tar zipado com extensao .tgz contendo os 
#fontes do seu programa e o Makefile.
# envie um mail com este arquivo para o professor.
tgz: 
	rm -f *.o rm goianinha *.tgz 
	tar -zcvf goianinha.tgz *
	echo "O arquivo goianinha.tgz com os fontes e Makefile foi gerado. Pode ser enviado."	
